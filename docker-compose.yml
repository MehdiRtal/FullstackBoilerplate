version: "3.9"

services:
  tunnel:
    image: cloudflare/cloudflared:latest
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN?error}
    command: tunnel run

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD?error}
      - GF_INSTALL_PLUGINS=redis-datasource

  postgres:
    image: postgres:alpine
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?error}
    volumes:
      - ./backups/postgres:/backups
      - ./scripts/postgres:/scripts

  redis:
    image: redis:alpine
    volumes:
      - ./backups/redis:/backups
      - ./scripts/redis:/scripts

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL?error}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD?error}
    depends_on:
      - postgres

  redisinsight:
    image: redislabs/redisinsight:latest
    depends_on:
      - redis

  rq:
    image: ${COMPOSE_PROJECT_NAME}-api:latest
    environment:
      - ENVIRONEMENT=PROD
    command: rq worker-pool -u ${RQ_URL?error} -n 8
    depends_on:
      - redis
      - api

  rq-scheduler:
    image: python:3.12-slim
    command: sh -c "pip install rq-scheduler && rqscheduler -u ${RQ_URL}"
    depends_on:
      - rq

  api:
    build: ./api
    image: ${COMPOSE_PROJECT_NAME}-api:latest
    environment:
      - ENVIRONEMENT=PROD
    command: gunicorn src.main:app --workers 8 --worker-class uvicorn.workers.UvicornWorker --bind :8080
    depends_on:
      - postgres
      - redis

  frontend:
    build: ./frontend
    command: node .output/server/index.mjs
    depends_on:
      - api
